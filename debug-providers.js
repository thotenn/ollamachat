// Script para debugear URLs de proveedores
const fs = require('fs');

console.log('üîç Debug de Proveedores\n');

// Verificar si existe el archivo de configuraci√≥n
const settingsPath = './src/contexts/SettingsContext.tsx';
const providerServicePath = './src/services/providerService.ts';

if (fs.existsSync(settingsPath)) {
  console.log('‚úÖ SettingsContext.tsx encontrado');
} else {
  console.log('‚ùå SettingsContext.tsx no encontrado');
}

if (fs.existsSync(providerServicePath)) {
  console.log('‚úÖ providerService.ts encontrado');
  
  // Leer el archivo y buscar la funci√≥n getApiUrl
  const content = fs.readFileSync(providerServicePath, 'utf8');
  const hasGetApiUrl = content.includes('getApiUrl');
  
  if (hasGetApiUrl) {
    console.log('‚úÖ Funci√≥n getApiUrl encontrada');
    
    // Verificar cu√°ntas veces aparece
    const matches = content.match(/getApiUrl/g);
    console.log(`üìä getApiUrl aparece ${matches ? matches.length : 0} veces`);
    
    // Buscar la implementaci√≥n de Anthropic
    const anthropicMatch = content.match(/class AnthropicProviderService[\s\S]*?private getApiUrl\([\s\S]*?\{[\s\S]*?\}/);
    if (anthropicMatch) {
      console.log('‚úÖ Implementaci√≥n de AnthropicProviderService.getApiUrl encontrada');
    } else {
      console.log('‚ùå Implementaci√≥n de AnthropicProviderService.getApiUrl NO encontrada');
    }
  } else {
    console.log('‚ùå Funci√≥n getApiUrl NO encontrada');
  }
} else {
  console.log('‚ùå providerService.ts no encontrado');
}

console.log('\nüìã Pasos de soluci√≥n:');
console.log('1. Reinicia la app web completamente');
console.log('2. Ve a Settings ‚Üí Anthropic');
console.log('3. Verifica que la URL sea: http://localhost:8010');
console.log('4. Si no es as√≠, c√°mbiala manualmente');
console.log('5. Guarda la configuraci√≥n');
console.log('6. Prueba la conexi√≥n');

console.log('\nüöÄ URLs correctas para proxies CORS:');
console.log('   ‚Ä¢ Anthropic: http://localhost:8010');
console.log('   ‚Ä¢ OpenAI: http://localhost:8011');
console.log('   ‚Ä¢ Gemini: http://localhost:8012');

console.log('\n‚ö†Ô∏è  Si el problema persiste:');
console.log('   ‚Ä¢ Borra los datos de la app en el navegador');
console.log('   ‚Ä¢ Usa el modo inc√≥gnito');
console.log('   ‚Ä¢ Verifica que npm run cors-proxy est√© ejecut√°ndose');